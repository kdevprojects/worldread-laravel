{"version":3,"sources":["./src/app/structure/comment-editor/comment-editor.component.ts","./src/app/structure/comment-editor/comment-editor.component.html","./src/app/services/toast.service.ts","./src/app/auth/login.guard.ts","./src/environments/environment.ts","./src/app/structure/stories-list/stories-list.component.html","./src/app/structure/stories-list/stories-list.component.ts","./src/app/auth/authentication.component.html","./src/app/auth/authentication.component.ts","./src/app/models/model.module.ts","./src/app/animations.ts","./src/app/pages/landing-page/landing-page.component.ts","./src/app/pages/landing-page/landing-page.component.html","./src/app/auth/authentication.module.ts","./src/app/shared/shared.module.ts","./src/app/structure/navbar/navbar.component.html","./src/app/structure/navbar/navbar.component.ts","./src/app/auth/sign-up/sign-up.component.html","./src/app/auth/sign-up/sign-up.component.ts","./src/app/interceptors/auth.interceptor.ts","./src/app/admin/overview/overview.component.html","./src/app/admin/overview/overview.component.ts","./src/app/directives/scroll-progress.directive.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/admin/admin.component.ts","./src/app/admin/admin.component.html","./src/app/structure/profile/profile.component.html","./src/app/structure/profile/profile.component.ts","./src/app/admin/competition-checkout/competition-checkout.component.ts","./src/app/admin/competition-checkout/competition-checkout.component.html","./src/app/shared/toast/toast.component.ts","./src/app/shared/toast/toast.component.html","./src/app/structure/competition/competition.component.ts","./src/app/structure/competition/competition.component.html","./src/app/app.module.ts","./src/app/auth/register/register.component.ts","./src/app/auth/register/register.component.html","./src/app/auth/login/login.component.ts","./src/app/auth/login/login.component.html","./src/app/pages/pages.module.ts","./src/app/services/authentication.service.ts","./src/app/structure/competitions-list/competitions-list.component.html","./src/app/structure/competitions-list/competitions-list.component.ts","./src/app/admin/admin.module.ts","./src/app/admin/story-editor/story-editor.component.html","./src/app/admin/story-editor/story-editor.component.ts","./src/app/auth/authentication.guard.ts","./src/app/structure/story-detail/story-detail.component.html","./src/app/structure/story-detail/story-detail.component.ts","./src/app/services/user.service.ts","./src/app/directives/debounce-click.directive.ts","./src/app/icons/icons.module.ts","./src/app/app-routing.module.ts","./src/app/models/comment.model.ts","./src/app/services/repository.service.ts","./src/main.ts","./src/app/services/error-handler.service.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nimport { Comment } from '../../models/comment.model';\nimport { Repository } from 'src/app/services/repository.service';\nimport { Story } from 'src/app/models/story.model';\n\n@Component({\n  selector: 'app-comment-editor',\n  templateUrl: './comment-editor.component.html',\n  styleUrls: ['./comment-editor.component.scss'],\n})\nexport class CommentEditorComponent implements OnInit {\n  @Input() story: Story;\n  commentForm: FormGroup;\n  showError: boolean = false;\n  newComment: any = new Comment();\n  constructor(private repo: Repository, private fb: FormBuilder) {}\n  ngOnInit(): void {\n    this.commentForm = this.fb.group({\n      body: ['', [Validators.required]],\n    });\n  }\n  onSubmit() {\n    const formData = this.commentForm.getRawValue();\n    const data = {\n      on_story: this.story.id,\n      body: formData.body,\n    };\n    this.repo.createComment(data);\n    this.commentForm.reset();\n  }\n  get body() {\n    return this.commentForm.get('body');\n  }\n}\n","<h1 class=\"page-title\">Submit a Comment</h1>\n<div class=\"row\">\n  <div class=\"col-lg-8\">\n    <form [formGroup]=\"commentForm\" (submit)=\"onSubmit()\">\n      <div class=\"form-group\">\n        <textarea\n          class=\"form-control\"\n          name=\"body\"\n          rows=\"5\"\n          placeholder=\"Enter your comment\"\n          formControlName=\"body\"\n        ></textarea>\n        <div\n          *ngIf=\"body.invalid && (body.dirty || body.touched)\"\n          class=\"text-danger my-2\"\n        >\n          <div *ngIf=\"body.errors.required\">This field cannot be empty.</div>\n        </div>\n      </div>\n      <button class=\"btn btn-primary\" [disabled]=\"!commentForm.valid\">\n        Submit\n      </button>\n    </form>\n  </div>\n</div>\n","import { Injectable, TemplateRef } from '@angular/core';\n\n@Injectable({ providedIn: 'root' })\nexport class ToastService {\n  toasts: any[] = [];\n\n  show(textOrTpl: string | TemplateRef<any>, options: any = {}) {\n    this.toasts.push({ textOrTpl, ...options });\n  }\n\n  remove(toast) {\n    this.toasts = this.toasts.filter(t => t !== toast);\n  }\n}\n","import {\n  ActivatedRouteSnapshot,\n  Router,\n  RouterStateSnapshot,\n} from '@angular/router';\n\nimport { Injectable } from '@angular/core';\nimport { UserService } from '../services/user.service';\n\n@Injectable()\nexport class LoginGuard {\n  constructor(\n    private router: Router,\n    private userService: UserService\n  ) {}\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): boolean {\n    if (this.userService.isUserLoggedIn()) {\n      this.router.navigateByUrl('/members/overview');\n      return false;\n    } else {\n      return true;\n    }\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiUrl: 'http://localhost/api',\r\n  oauth_client_id: 2,\r\n  oauth_client_secret: 'eB0HKiE8FaCQgbBq97sVECtTnJfM9hIUgyjemdxy',\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","<app-navbar></app-navbar>\r\n<div class=\"container\">\r\n  <section class=\"page-section\">\r\n    <header class=\"section-header\">\r\n      <h1 class=\"section-title\">Latest stories</h1>\r\n    </header>\r\n    <main>\r\n      <div *ngIf=\"stories?.length > 0; else noStories\">\r\n        <article *ngFor=\"let story of stories\" class=\"clearfix pt-3 pb-5\">\r\n          <header class=\"article-header\">\r\n            <h2 class=\"article-title\">\r\n              <a\r\n                href=\"#\"\r\n                [routerLink]=\"['/stories', story?.slug]\"\r\n                rel=\"bookmark\"\r\n                >{{ story?.title }}</a\r\n              >\r\n            </h2>\r\n            <div class=\"article-meta text-muted\">\r\n              <div class=\"row\">\r\n                <div class=\"col-12 col-md-8\">\r\n                  <span class=\"screen-reader-text\">Published on </span>\r\n                  <time class=\"article-date published\">{{\r\n                    story?.created_at | date: \"mediumDate\"\r\n                  }}</time>\r\n                  <span class=\"screen-reader-text\">, by </span>\r\n                  <a href=\"#\" [routerLink]=\"['/profiles', story?.author?.username]\">{{ story?.author?.username }}</a>\r\n                </div>\r\n                <div class=\"col-12 col-md-4\">\r\n                  <div class=\"text-body text-md-right mt-3 mt-md-0\">\r\n                    {{ story?.comments_count }}\r\n                    <i-feather name=\"message-square\" class=\"mr-3\"></i-feather>\r\n                    {{ story?.likes_count }}\r\n                    <i-feather name=\"heart\"></i-feather>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </header>\r\n          <div class=\"article-content\">\r\n            <div class=\"row\">\r\n              <div class=\"col-12 col-md-4\">\r\n                <img\r\n                  loading=\"lazy\"\r\n                  class=\"article-image img-fluid\"\r\n                  alt=\"{{ story?.title }}\"\r\n                  src=\"https://picsum.photos/435/288?random={{ story?.id }}\"\r\n                  width=\"435\"\r\n                  height=\"288\"\r\n                />\r\n              </div>\r\n              <div class=\"col-12 col-md-8\">\r\n                <div class=\"article-content-summary\">{{ story?.summary }}</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </article>\r\n      </div>\r\n      <ng-template #noStories> There are no stories yet. </ng-template>\r\n    </main>\r\n  </section>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\n\nimport { Repository } from \"../../services/repository.service\";\nimport { Story } from \"../../models/story.model\";\n\n@Component({\n  selector: 'app-stories-list',\n  templateUrl: './stories-list.component.html',\n  styleUrls: ['./stories-list.component.scss']\n})\nexport class StoriesListComponent implements OnInit {\n\n  constructor(private repo: Repository) { }\n\n  ngOnInit(): void {\n    this.repo.getStories();\n  }\n\n  get stories(): Story[] {\n    return this.repo.stories;\n  }\n}\n","<div class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n  <div class=\"container\">\r\n    <a href=\"#\" routerLink=\"/home\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact: true}\" class=\"navbar-brand\">WorldRead</a>\r\n    <button\r\n      class=\"navbar-toggler\"\r\n      type=\"button\"\r\n      data-toggle=\"collapse\"\r\n      data-target=\"#navbarResponsive\"\r\n      aria-controls=\"navbarResponsive\"\r\n      aria-expanded=\"false\"\r\n      aria-label=\"Toggle navigation\"\r\n    >\r\n      <span class=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div class=\"collapse navbar-collapse\" id=\"navbarResponsive\">\r\n      <ul class=\"navbar-nav ml-auto\">\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" href=\"#\" routerLink=\"/stories\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact: true}\">Stories</a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" href=\"#\" routerLink=\"/about\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact: true}\">About</a>\r\n        </li>\r\n      </ul>\r\n      <a class=\"btn btn-outline-primary my-2 my-sm-0\" href=\"#\" routerLink=\"/members/login\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact: true}\">Sign In</a>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"container\">\r\n  <section class=\"page-section\">\r\n    <header class=\"section-header\">\r\n      <h1 class=\"section-title text-center\">Sign In</h1>\r\n    </header>\r\n    <main>\r\n      <div class=\"row\">\r\n        <div class=\"col-10 col-md-6 mx-auto\">\r\n          <p *ngIf=\"showError\" class=\"alert alert-danger\">\r\n            Invalid username or password\r\n          </p>\r\n          <form novalidate #authForm=\"ngForm\">\r\n            <div class=\"form-group\">\r\n              <label>Name:</label>\r\n              <input\r\n                #name=\"ngModel\"\r\n                name=\"name\"\r\n                class=\"form-control\"\r\n                [(ngModel)]=\"authService.name\"\r\n                required\r\n              />\r\n              <div *ngIf=\"name.invalid\" class=\"text-danger\">\r\n                Please enter your user name\r\n              </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label>Password:</label>\r\n              <input\r\n                type=\"password\"\r\n                #password=\"ngModel\"\r\n                name=\"password\"\r\n                class=\"form-control\"\r\n                [(ngModel)]=\"authService.password\"\r\n                required\r\n              />\r\n              <div *ngIf=\"password.invalid\" class=\"text-danger\">\r\n                Please enter your password\r\n              </div>\r\n            </div>\r\n            <div class=\"text-center pt-2\">\r\n              <button\r\n                class=\"btn btn-primary\"\r\n                [disabled]=\"authForm.invalid\"\r\n                (click)=\"login()\"\r\n              >\r\n                Sign In\r\n              </button>\r\n              <p class=\"mt-5\">\r\n                Don't have an account?\r\n                <a\r\n                  href=\"#\"\r\n                  routerLink=\"/members/join\"\r\n                  routerLinkActive=\"active\"\r\n                  [routerLinkActiveOptions]=\"{ exact: true }\"\r\n                  >Sign Up</a\r\n                >\r\n              </p>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </main>\r\n  </section>\r\n</div>\r\n","import { AuthenticationService } from '../services/authentication.service';\nimport { Component } from '@angular/core';\n@Component({\n  templateUrl: 'authentication.component.html',\n})\nexport class AuthenticationComponent {\n  constructor(public authService: AuthenticationService) {}\n  showError: boolean = false;\n  login() {\n    this.showError = false;\n    this.authService.login().subscribe((result) => {\n      this.showError = !result;\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\r\nimport { Repository } from '../services/repository.service';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\n@NgModule({\r\n  imports: [HttpClientModule],\r\n  providers: [Repository]\r\n})\r\nexport class ModelModule { }\r\n","import {\r\n  animate,\r\n  query,\r\n  style,\r\n  transition,\r\n  trigger,\r\n} from '@angular/animations';\r\n\r\nexport const fadeAnimation = trigger('fadeAnimation', [\r\n  // The '* => *' will trigger the animation to change between any two states\r\n  transition('* => *', [\r\n    // The query function has three params.\r\n    // First is the event, so this will apply on entering or when the element is added to the DOM.\r\n    // Second is a list of styles or animations to apply.\r\n    // Third we add a config object with optional set to true, this is to signal\r\n    // angular that the animation may not apply as it may or may not be in the DOM.\r\n    query(':enter', [style({ opacity: 0 })], { optional: true }),\r\n    query(\r\n      ':leave',\r\n      // here we apply a style and use the animate function to apply the style over 0.3 seconds\r\n      [style({ opacity: 1 }), animate('0.3s', style({ opacity: 0 }))],\r\n      { optional: true }\r\n    ),\r\n    query(\r\n      ':enter',\r\n      [style({ opacity: 0 }), animate('0.3s', style({ opacity: 1 }))],\r\n      { optional: true }\r\n    ),\r\n  ]),\r\n]);\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-landing-page',\n  templateUrl: './landing-page.component.html',\n  styleUrls: ['./landing-page.component.scss']\n})\nexport class LandingPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>landing-page works!</p>\n","import { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AuthenticationComponent } from './authentication.component';\nimport { AuthenticationGuard } from './authentication.guard';\nimport { AuthenticationService } from '../services/authentication.service';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { LoginComponent } from './login/login.component';\nimport { LoginGuard } from '../auth/login.guard';\nimport { NgModule } from '@angular/core';\nimport { RegisterComponent } from './register/register.component';\nimport { RouterModule } from '@angular/router';\nimport { SharedModule } from '../shared/shared.module';\nimport { SignUpComponent } from './sign-up/sign-up.component';\n\n@NgModule({\n  imports: [RouterModule, FormsModule, CommonModule, ReactiveFormsModule, HttpClientModule, SharedModule],\n  declarations: [AuthenticationComponent, SignUpComponent, LoginComponent, RegisterComponent],\n  providers: [AuthenticationService, AuthenticationGuard, LoginGuard],\n  exports: [AuthenticationComponent],\n})\nexport class AuthModule {}\n","import { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { CommonModule } from '@angular/common';\nimport { EllipsisModule } from 'ngx-ellipsis';\nimport { IconsModule } from '../icons/icons.module';\nimport { NgModule } from '@angular/core';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgxPayPalModule } from 'ngx-paypal';\nimport { RouterModule } from '@angular/router';\nimport { ToastComponent } from './toast/toast.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgbModule,\n    RouterModule, NgxPayPalModule, IconsModule, EllipsisModule\n  ],\n  declarations: [ToastComponent],\n  exports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgbModule,\n    RouterModule, NgxPayPalModule, ToastComponent, IconsModule, EllipsisModule\n  ]\n})\nexport class SharedModule {}\n","<div class=\"navbar navbar-expand-lg navbar-light border-light shadow-sm bg-light\">\n  <div class=\"container\">\n    <a\n      href=\"#\"\n      routerLink=\"/\"\n      routerLinkActive=\"active\"\n      [routerLinkActiveOptions]=\"{ exact: true }\"\n      class=\"navbar-brand\"\n      >Readible</a\n    >\n    <button\n    class=\"navbar-toggler\"\n    type=\"button\"\n    (click)=\"isMenuCollapsed = !isMenuCollapsed\"\n  >\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n\n  <div [ngbCollapse]=\"isMenuCollapsed\" class=\"collapse navbar-collapse\">\n      <ul class=\"navbar-nav ml-auto\">\n        <li class=\"nav-item\">\n          <a\n            class=\"nav-link\"\n            href=\"#\"\n            routerLink=\"/stories\"\n            routerLinkActive=\"active\"\n            [routerLinkActiveOptions]=\"{ exact: true }\"\n            >Stories</a\n          >\n        </li>\n        <li class=\"nav-item\">\n          <a\n            class=\"nav-link\"\n            href=\"#\"\n            routerLink=\"/competitions\"\n            routerLinkActive=\"active\"\n            [routerLinkActiveOptions]=\"{ exact: true }\"\n            >Competitions</a\n          >\n        </li>\n      </ul>\n      <ul class=\"navbar-nav ml-lg-5\" *ngIf=\"userService.isUserLoggedIn()\">\n\n        <li class=\"nav-item\" ngbDropdown>\n          <button\n            class=\"btn btn-link dropdown-toggle\"\n            id=\"dropdownBasic1\"\n            ngbDropdownToggle\n          >\n            <img\n              src=\"https://picsum.photos/30/30\"\n              alt=\"\"\n              style=\"\n                height: 30px;\n                width: 30px;\n                margin-right: 0.5rem;\n                clip-path: circle(15px at center);\n              \"\n            />\n            <span *ngIf=\"userService.getCurrentUser() | async as user\">\n              {{ user.username }}</span\n            >\n          </button>\n          <div ngbDropdownMenu aria-labelledby=\"dropdownBasic1\">\n            <button class=\"dropdown-item p-3\" ngbDropdownItem routerLink=\"/members/overview\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{ exact: true }\">\n              Dashboard\n            </button>\n            <button class=\"dropdown-item p-3\" ngbDropdownItem (click)=\"logout()\">\n              Log Out\n            </button>\n          </div>\n        </li>\n      </ul>\n      <a\n        class=\"btn btn-outline-primary my-2 my-sm-0\"\n        *ngIf=\"!userService.isUserLoggedIn()\"\n        href=\"#\"\n        routerLink=\"/members/login\"\n        routerLinkActive=\"active\"\n        [routerLinkActiveOptions]=\"{ exact: true }\"\n        >Sign In</a\n      >\n    </div>\n  </div>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\n\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})\nexport class NavbarComponent implements OnInit {\n  public isMenuCollapsed = true;\n\n  constructor(public userService: UserService) { }\n\n  ngOnInit(): void {\n  }\n\n  logout() {\n    this.userService.logout();\n  }\n}\n","<div class=\"container-fluid h-100\">\n  <div class=\"row no-gutters h-100\">\n    <div class=\"col-lg-6\">\n      <div class=\"signup-bg\"></div>\n    </div>\n    <div class=\"col-lg-6 h-100\">\n      <section class=\"page-section h-100 bg-white\">\n        <header class=\"section-header\">\n          <h1 class=\"section-title text-center\">Sign Up</h1>\n        </header>\n        <main>\n          <div class=\"row\">\n            <div class=\"col-10 col-md-6 mx-auto\">\n              <p *ngIf=\"showError\" class=\"alert alert-danger\">\n                Invalid username or password\n              </p>\n              <form novalidate #authForm=\"ngForm\">\n                <div class=\"form-group\">\n                  <label>Username:</label>\n                  <input #name=\"ngModel\"\n                         name=\"name\"\n                         class=\"form-control\"\n                         [(ngModel)]=\"authService.name\"\n                         required />\n                  <div *ngIf=\"name.invalid\" class=\"text-danger\">\n                    Please enter your username\n                  </div>\n                </div>\n                <div class=\"form-group\">\n                  <label>Email:</label>\n                  <input #email=\"ngModel\"\n                         name=\"email\"\n                         class=\"form-control\"\n                         [(ngModel)]=\"authService.email\"\n                         required />\n                  <div *ngIf=\"email.invalid\" class=\"text-danger\">\n                    Please enter your email\n                  </div>\n                </div>\n                <div class=\"form-group\">\n                  <label>Password:</label>\n                  <input type=\"password\"\n                         #password=\"ngModel\"\n                         name=\"password\"\n                         class=\"form-control\"\n                         [(ngModel)]=\"authService.password\"\n                         required />\n                  <div *ngIf=\"password.invalid\" class=\"text-danger\">\n                    Please enter your password\n                  </div>\n                </div>\n                <div class=\"form-group\">\n                  <label>Confirm Password:</label>\n                  <input type=\"password\"\n                         #confirmPassword=\"ngModel\"\n                         name=\"confirmPassword\"\n                         class=\"form-control\"\n                         [(ngModel)]=\"authService.confirmPassword\"\n                         required />\n                  <div *ngIf=\"confirmPassword.invalid\" class=\"text-danger\">\n                    Please re-enter your password\n                  </div>\n                </div>\n                <div class=\"text-center pt-2\">\n                  <button class=\"btn btn-primary\"\n                          [disabled]=\"authForm.invalid\"\n                          (click)=\"register()\">\n                    Sign Up\n                  </button>\n                  <p class=\"mt-5\">\n                    Back to\n                    <a\n                      href=\"#\"\n                      routerLink=\"/home\"\n                      routerLinkActive=\"active\"\n                      [routerLinkActiveOptions]=\"{ exact: true }\"\n                      >Homepage</a\n                    >\n                  </p>\n                </div>\n              </form>\n\n            </div>\n          </div>\n        </main>\n      </section>\n    </div>\n  </div>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\n\nimport { AuthenticationService } from '../../services/authentication.service';\n\n@Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.scss']\n})\nexport class SignUpComponent {\n\n  constructor(public authService: AuthenticationService) {}\n  showError: boolean = false;\n  register() {\n    this.showError = false;\n    this.authService.register().subscribe((result) => {\n      this.showError = !result;\n    });\n  }\n\n}\n","import {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n} from '@angular/common/http';\n\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthInterceptor implements HttpInterceptor {\n  constructor() {}\n  intercept(\n    req: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    req = req.clone({\n      setHeaders: {\n        Authorization: `Bearer ${localStorage.getItem('token')}`,\n      },\n    });\n\n    return next.handle(req);\n  }\n}\n","<div class=\"container my-5\">\r\n  <h1 class=\"page-title\">Overview</h1>\r\n  <hr />\r\n  <h1 class=\"mb-5\">My competitions</h1>\r\n  <div class=\"row\">\r\n    <div class=\"col-lg-12\">\r\n      <div\r\n        *ngIf=\"competitions?.length > 0; else noCompetitions\"\r\n        class=\"card-columns\"\r\n      >\r\n        <a\r\n          href=\"#\"\r\n          [routerLink]=\"['/competitions', competition?.slug]\"\r\n          *ngFor=\"let competition of competitions\"\r\n          class=\"d-block\"\r\n        >\r\n          <div class=\"card bg-primary text-light border-0 shadow mb-3\">\r\n            <img\r\n              class=\"card-img-top\"\r\n              alt=\"\"\r\n              src=\"https://picsum.photos/368/160?random={{ competition?.id }}\"\r\n              style=\"height: 160px; width: 100%; display: block\"\r\n            />\r\n            <div class=\"card-body\">\r\n              <h5 class=\"card-title\">{{ competition?.name }}</h5>\r\n              <p class=\"card-text\" style=\"height: 50px\" ellipsis>\r\n                {{ competition?.description }}\r\n              </p>\r\n              <p class=\"card-text\">\r\n                <small class=\"text-muted\"\r\n                  >Ends {{ competition?.deadline | date: \"medium\" }}</small\r\n                >\r\n              </p>\r\n            </div>\r\n            <i-feather name=\"check-square\"></i-feather>\r\n          </div>\r\n        </a>\r\n      </div>\r\n      <ng-template #noCompetitions>\r\n        There are no competitions yet.\r\n      </ng-template>\r\n    </div>\r\n  </div>\r\n  <hr />\r\n  <h1 class=\"mb-5\">My stories</h1>\r\n  <div *ngIf=\"stories?.length > 0; else noStories\">\r\n    <article *ngFor=\"let story of stories\" class=\"clearfix pt-3 pb-5\">\r\n      <header class=\"article-header\">\r\n        <h2 class=\"article-title\">\r\n          <a href=\"#\" [routerLink]=\"['/stories', story?.slug]\" rel=\"bookmark\">{{\r\n            story?.title\r\n          }}</a>\r\n        </h2>\r\n        <div class=\"article-meta text-muted\">\r\n          <div class=\"row\">\r\n            <div class=\"col-12 col-md-8 small\">\r\n              <span class=\"screen-reader-text\">Published on </span>\r\n              <time class=\"article-date published\">{{\r\n                story?.created_at | date: \"mediumDate\"\r\n              }}</time>\r\n            </div>\r\n            <div class=\"col-12 col-md-4\">\r\n              <div class=\"text-body text-md-right mt-3 mt-md-0\">\r\n                {{ story?.comments_count }}\r\n                <i-feather name=\"message-square\" class=\"mr-3\"></i-feather>\r\n                {{ story?.likes_count }}\r\n                <i-feather name=\"heart\"></i-feather>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </header>\r\n      <div class=\"article-content\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12 col-md-4\">\r\n            <img\r\n              loading=\"lazy\"\r\n              class=\"article-image img-fluid\"\r\n              alt=\"{{ story?.title }}\"\r\n              src=\"https://picsum.photos/435/288?random={{ story?.id }}\"\r\n              width=\"435\"\r\n              height=\"288\"\r\n            />\r\n          </div>\r\n          <div class=\"col-12 col-md-8\">\r\n            <div class=\"article-content-summary\">\r\n              {{ story?.summary }}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </article>\r\n  </div>\r\n  <ng-template #noStories> There are no stories yet. </ng-template>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { Competition } from 'src/app/models/competition.model';\r\nimport { Repository } from 'src/app/services/repository.service';\r\nimport { Story } from 'src/app/models/story.model';\r\nimport { UserService } from 'src/app/services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-overview',\r\n  templateUrl: './overview.component.html',\r\n  styleUrls: ['./overview.component.scss'],\r\n})\r\nexport class OverviewComponent {\r\n  stories: Story[];\r\n  competitions: Competition[];\r\n  constructor(private repo: Repository, private userService: UserService) {}\r\n  ngOnInit(): void {\r\n    this.userService.getCurrentUser().subscribe((u) => {\r\n      if (u) {\r\n        this.repo.getProfileCompetitions$(u).subscribe((c) => {\r\n          this.competitions = c;\r\n          console.log(c);\r\n        });\r\n        this.repo.getProfileStories$(u).subscribe((s) => {\r\n          this.stories = s;\r\n          console.log(s);\r\n        });\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { Directive, ElementRef, HostListener } from '@angular/core';\n\n@Directive({\n  selector: '[appScrollProgress]',\n})\nexport class ScrollProgressDirective {\n  constructor(private hostElement: ElementRef) {}\n\n  @HostListener('window:scroll', ['$event'])\n  onWindowScroll(event) {\n    const winScroll =\n      event.target.documentElement.scrollTop ||\n      event.currentTarget.scrollTop ||\n      document.body.scrollTop;\n    const height =\n      this.hostElement.nativeElement.scrollHeight -\n      this.hostElement.nativeElement.offsetTop -\n      event.target.documentElement.clientHeight / 3;\n    const scrolled = (winScroll / height) * 100;\n    document.getElementById('scrollBar').style.width =\n      (scrolled <= 100 ? scrolled : '100') + '%';\n  }\n}\n","import { Component } from '@angular/core';\nimport { ErrorHandlerService } from './services/error-handler.service';\nimport { Repository } from './services/repository.service';\nimport { ToastService } from './services/toast.service';\nimport { UserService } from './services/user.service';\nimport { fadeAnimation } from './animations';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  animations: [fadeAnimation], // register the animation\n})\nexport class AppComponent {\n  private lastError: string[];\n\n  constructor(\n    private userService: UserService,\n    private errorService: ErrorHandlerService,\n    private toastService: ToastService,\n    private repo: Repository\n  ) {\n\n  }\n  ngOnInit(): void {\n    this.userService.reloadUserData();\n    this.userService.getCurrentUser().subscribe((u) => {\n      if (u) {\n        this.repo.getProfileCompetitions(u);\n      }\n    });\n\n    this.errorService.errors.subscribe((error) => {\n      this.lastError = error;\n      this.lastError.forEach((e) => {\n        this.showDangerToast(e);\n      });\n    });\n  }\n  get error(): string[] {\n    return this.lastError;\n  }\n\n  clearError() {\n    this.lastError = null;\n  }\n\n  showDangerToast(message: string) {\n    this.toastService.show(message, {\n      classname: 'bg-danger text-light',\n      delay: 5000,\n    });\n  }\n}\n","<div class=\"progress-container\">\r\n  <div class=\"progress-bar\" id=\"scrollBar\"></div>\r\n</div>\r\n<div [@fadeAnimation]=\"o.isActivated ? o.activatedRoute : ''\">\r\n  <img [src]=\"'/assets/img/signup-bg.jpg'\" hidden />\r\n  <router-outlet #o=\"outlet\"></router-outlet>\r\n</div>\r\n<app-toasts aria-live=\"polite\" aria-atomic=\"true\"></app-toasts>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { Repository } from '../services/repository.service';\r\nimport { UserService } from '../services/user.service';\r\nimport { fadeAnimation } from '../animations';\r\n\r\n@Component({\r\n  selector: 'app-admin',\r\n  templateUrl: './admin.component.html',\r\n  styleUrls: ['./admin.component.scss'],\r\n  animations: [fadeAnimation], // register the animation\r\n})\r\nexport class AdminComponent {\r\n  public isMenuCollapsed = true;\r\n  constructor(public userService: UserService) {}\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n  logout() {\r\n    this.userService.logout();\r\n  }\r\n}\r\n","<nav class=\"navbar navbar-expand-lg navbar-light border-light shadow-sm bg-light\">\r\n  <div class=\"container\">\r\n    <a\r\n      class=\"navbar-brand\"\r\n      href=\"#\"\r\n      routerLink=\"/\"\r\n      routerLinkActive=\"active\"\r\n      [routerLinkActiveOptions]=\"{ exact: true }\"\r\n      >Readible</a\r\n    >\r\n    <button\r\n      class=\"navbar-toggler\"\r\n      type=\"button\"\r\n      (click)=\"isMenuCollapsed = !isMenuCollapsed\"\r\n    >\r\n      <span class=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n\r\n    <div [ngbCollapse]=\"isMenuCollapsed\" class=\"collapse navbar-collapse\">\r\n      <a\r\n        href=\"#\"\r\n        routerLink=\"/members/create\"\r\n        routerLinkActive=\"active\"\r\n        [routerLinkActiveOptions]=\"{ exact: true }\"\r\n        class=\"btn btn-outline-primary ml-auto my-2 my-sm-0\"\r\n        >Submit a story</a\r\n      >\r\n      <ul class=\"navbar-nav ml-lg-5\">\r\n        <li class=\"nav-item\" ngbDropdown>\r\n          <button\r\n            class=\"btn btn-link dropdown-toggle\"\r\n            id=\"dropdownBasic1\"\r\n            ngbDropdownToggle\r\n          >\r\n            <img\r\n              src=\"https://picsum.photos/30/30\"\r\n              alt=\"\"\r\n              style=\"\r\n                height: 30px;\r\n                width: 30px;\r\n                margin-right: 0.5rem;\r\n                clip-path: circle(15px at center);\r\n              \"\r\n            />\r\n            <span *ngIf=\"userService.getCurrentUser() | async as user\">\r\n              {{ user.username }}</span\r\n            >\r\n          </button>\r\n          <div ngbDropdownMenu aria-labelledby=\"dropdownBasic1\">\r\n            <button class=\"dropdown-item p-3\" ngbDropdownItem routerLink=\"/members/overview\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{ exact: true }\">\r\n              Dashboard\r\n            </button>\r\n            <button class=\"dropdown-item p-3\" ngbDropdownItem (click)=\"logout()\">\r\n              Log Out\r\n            </button>\r\n          </div>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</nav>\r\n\r\n<div [@fadeAnimation]=\"o.isActivated ? o.activatedRoute : ''\">\r\n  <router-outlet #o=\"outlet\"></router-outlet>\r\n</div>\r\n","<app-navbar></app-navbar>\n<div class=\"profile-header\"></div>\n\n<div class=\"container\">\n  <section class=\"profile-section\">\n    <div class=\"row\">\n      <div class=\"col-lg-4\">\n        <aside>\n          <div class=\"card border-light shadow mb-5\">\n            <div class=\"card-body py-5\">\n              <div class=\"d-flex flex-column align-items-center text-center\">\n                <img\n                  src=\"https://picsum.photos/150/150\"\n                  alt=\"\"\n                  class=\"rounded-circle\"\n                  width=\"150\"\n                  style=\"clip-path: circle(75px at center)\"\n                />\n                <div class=\"mt-3\">\n                  <h4>{{ profile?.username }}</h4>\n                  <p class=\"text-secondary mb-2\">\n                    {{ profile?.first_name + \" \" + profile?.last_name }}\n                  </p>\n                  <p class=\"text-muted small\">\n                    {{ profile?.email }}\n                  </p>\n                  <p class=\"mb-5\"><em>\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed\n                    do eiusmod tempor incididunt ut labore et dolore magna\n                    aliqua. Ut enim ad minim veniam, quis nostrud exercitation\n                    ullamco laboris nisi ut aliquip ex ea commodo consequat.</em>\n                  </p>\n                  <button class=\"btn btn-primary mx-1\">Follow</button>\n                  <button class=\"btn btn-outline-primary mx-1\">Message</button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </aside>\n      </div>\n      <div class=\"col-lg-7 ml-auto\">\n        <main>\n          <div *ngIf=\"stories?.length > 0; else noStories\">\n            <article *ngFor=\"let story of stories\" class=\"clearfix pt-3 pb-5\">\n              <header class=\"article-header\">\n                <h2 class=\"article-title\">\n                  <a\n                    href=\"#\"\n                    [routerLink]=\"['/stories', story?.slug]\"\n                    rel=\"bookmark\"\n                    >{{ story?.title }}</a\n                  >\n                </h2>\n                <div class=\"article-meta text-muted\">\n                  <div class=\"row\">\n                    <div class=\"col-12 col-md-8 small\">\n                      <span class=\"screen-reader-text\">Published on </span>\n                      <time class=\"article-date published\">{{\n                        story?.created_at | date: \"mediumDate\"\n                      }}</time>\n                    </div>\n                    <div class=\"col-12 col-md-4\">\n                      <div class=\"text-body text-md-right mt-3 mt-md-0\">\n                        {{ story?.comments_count }}\n                        <i-feather\n                          name=\"message-square\"\n                          class=\"mr-3\"\n                        ></i-feather>\n                        {{ story?.likes_count }}\n                        <i-feather name=\"heart\"></i-feather>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </header>\n              <div class=\"article-content\">\n                <div class=\"row\">\n                  <div class=\"col-12 col-md-4\">\n                    <img\n                      loading=\"lazy\"\n                      class=\"article-image img-fluid\"\n                      alt=\"{{ story?.title }}\"\n                      src=\"https://picsum.photos/435/288?random={{ story?.id }}\"\n                      width=\"435\"\n                      height=\"288\"\n                    />\n                  </div>\n                  <div class=\"col-12 col-md-8\">\n                    <div class=\"article-content-summary\">\n                      {{ story?.summary }}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </article>\n          </div>\n          <ng-template #noStories> There are no stories yet. </ng-template>\n        </main>\n      </div>\n    </div>\n  </section>\n</div>\n","import { ActivatedRoute, Router } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\n\nimport { Repository } from 'src/app/services/repository.service';\nimport { Story } from 'src/app/models/story.model';\nimport { User } from 'src/app/models/user.model';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss']\n})\nexport class ProfileComponent implements OnInit {\n\n  constructor(private repo: Repository, router: Router, activeRoute: ActivatedRoute) {\n    let param = activeRoute.snapshot.params['param'];\n    if (param) {\n      this.repo.getProfile(param);\n      this.repo.getProfileStories(param);\n    } else {\n      router.navigateByUrl('/');\n    }\n  }\n\n  ngOnInit(): void {\n  }\n\n  get profile(): User {\n    return this.repo.profile;\n  }\n\n  get stories(): Story[] {\n    return this.repo.profileStories;\n  }\n\n}\n","import { ActivatedRoute, Router } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\nimport { ICreateOrderRequest, IPayPalConfig } from 'ngx-paypal';\n\nimport { Competition } from 'src/app/models/competition.model';\nimport { Repository } from 'src/app/services/repository.service';\nimport { Observable } from 'rxjs';\nimport { ToastService } from 'src/app/services/toast.service';\n\n@Component({\n  selector: 'app-competition-checkout',\n  templateUrl: './competition-checkout.component.html',\n  styleUrls: ['./competition-checkout.component.scss'],\n})\nexport class CompetitionCheckoutComponent implements OnInit {\n  public payPalConfig?: IPayPalConfig;\n  constructor(\n    private repo: Repository,\n    public router: Router,\n    activeRoute: ActivatedRoute,\n    private toastService: ToastService\n  ) {\n    let param = activeRoute.snapshot.params['param'];\n    if (param) {\n      this.repo.getCompetition(param);\n    } else {\n      router.navigateByUrl('/');\n    }\n\n  }\n\n  get competition(): Competition {\n    return this.repo.competition;\n  }\n\n  ngOnInit(): void {\n    if (this.isCompetitionDisabled(this.competition.id)) {\n      this.router.navigateByUrl('/members/overview');\n      this.showStandardToast(\"Your're already taking part in this competition\");\n    }\n    this.initConfig();\n  }\n\n  private initConfig(): void {\n    this.payPalConfig = {\n      currency: 'GBP',\n      clientId:\n        'AawjmRbKugS-b2dgHHjA064BBwQmhpozkbZiMJUkm5ygM_47k0Xs1sYmSMP3Z7fEeIQ-rlWgp44le2Gz',\n      createOrderOnClient: (data) =>\n        <ICreateOrderRequest>{\n          intent: 'CAPTURE',\n          purchase_units: [\n            {\n              amount: {\n                currency_code: 'GBP',\n                value: this.competition.fee.toString(),\n                breakdown: {\n                  item_total: {\n                    currency_code: 'GBP',\n                    value: this.competition.fee.toString(),\n                  },\n                },\n              },\n              items: [\n                {\n                  name: `Writing Competition Entry Fee (${this.competition.name.toString()})`,\n                  quantity: '1',\n                  category: 'DIGITAL_GOODS',\n                  unit_amount: {\n                    currency_code: 'GBP',\n                    value: this.competition.fee.toString(),\n                  },\n                },\n              ],\n            },\n          ],\n        },\n      advanced: {\n        commit: 'true',\n      },\n      style: {\n        label: 'paypal',\n        layout: 'vertical',\n      },\n      onApprove: (data, actions) => {\n        console.log(\n          'onApprove - transaction was approved, but not authorized',\n          data,\n          actions\n        );\n        actions.order.get().then((details) => {\n          console.log(\n            'onApprove - you can get full order details inside onApprove: ',\n            details\n          );\n          this.showStandardToast('Payment approved');\n        });\n      },\n      onClientAuthorization: (data) => {\n        console.log(\n          'onClientAuthorization - you should probably inform your server about completed transaction at this point',\n          data\n        );\n        //this.showSuccess = true;\n        this.showSuccessToast('Payment authorized');\n        this.repo.enterCompetition(this.competition).subscribe(\n          (data) => {\n            this.showSuccessToast(data.message);\n            this.router.navigateByUrl('/members/overview');\n          },\n          (err) => console.error(err)\n        );\n      },\n      onCancel: (data, actions) => {\n        console.log('OnCancel', data, actions);\n        //this.showCancel = true;\n        this.showDangerToast('Payment cancelled');\n      },\n      onError: (err) => {\n        console.log('OnError', err);\n        //this.showError = true;\n      },\n      onClick: (data, actions) => {\n        console.log('onClick', data, actions);\n        //this.resetStatus();\n      },\n    };\n  }\n\n  showStandardToast(message: string) {\n    this.toastService.show(message);\n  }\n\n  showSuccessToast(message: string) {\n    this.toastService.show(message, {\n      classname: 'bg-success text-light',\n      delay: 5000,\n    });\n  }\n\n  showDangerToast(message: string) {\n    this.toastService.show(message, {\n      classname: 'bg-danger text-light',\n      delay: 5000,\n    });\n  }\n\n  get currentUserCompetitions(): number[] {\n    return this.repo.profileCompetitionsIds;\n  }\n\n  isCompetitionDisabled(id: number): boolean {\n    if (this.currentUserCompetitions?.indexOf(id) != -1) {\n      return true;\n    }\n    return false;\n  }\n}\n","<div class=\"container my-5\">\r\n  <h1 class=\"page-title text-center\">{{ competition?.name }}</h1>\r\n  <div class=\"row\">\r\n    <div class=\"col-lg-10 mx-auto\">\r\n      <div class=\"card border-light shadow mb-5\">\r\n        <div class=\"card-body py-5\">\r\n          <div class=\"d-flex flex-column align-items-center\">\r\n            <div class=\"text-center\">\r\n              <h3 class=\"mb-3\">{{ competition?.reward | currency: \"GBP\":\"symbol\":\"1.2-2\" }} Prize</h3>\r\n              <p class=\"text-muted mb-3\">\r\n                Story submission deadline:\r\n                {{ competition?.deadline | date: \"MMM d, y, h:mm a\" }}\r\n              </p>\r\n              <p class=\"mb-5\">\r\n                You'll be charged\r\n                <b>{{ competition?.fee | currency: \"GBP\":\"symbol\":\"1.2-2\" }}</b>\r\n                entry fee\r\n              </p>\r\n              <ngx-paypal [config]=\"payPalConfig\"></ngx-paypal>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, TemplateRef } from '@angular/core';\n\nimport { ToastService } from '../../services/toast.service';\n\n@Component({\n  selector: 'app-toasts',\n  templateUrl: './toast.component.html',\n  styleUrls: ['./toast.component.scss'],\n  host: { '[class.ngb-toasts]': 'true' },\n})\nexport class ToastComponent {\n  constructor(public toastService: ToastService) {}\n\n  isTemplate(toast) {\n    return toast.textOrTpl instanceof TemplateRef;\n  }\n}\n","<ngb-toast\n  *ngFor=\"let toast of toastService.toasts\"\n  [class]=\"toast.classname\"\n  [autohide]=\"true\"\n  [delay]=\"toast.delay || 5000\"\n  (hidden)=\"toastService.remove(toast)\"\n>\n  <ng-template [ngIf]=\"isTemplate(toast)\" [ngIfElse]=\"text\">\n    <ng-template [ngTemplateOutlet]=\"toast.textOrTpl\"></ng-template>\n  </ng-template>\n\n  <ng-template #text>{{ toast.textOrTpl }}</ng-template>\n</ngb-toast>\n","import { ActivatedRoute, Router } from '@angular/router';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport {\n  NgbModal,\n  NgbModalRef,\n  NgbTypeahead,\n} from '@ng-bootstrap/ng-bootstrap';\nimport { Observable, OperatorFunction, Subject, merge } from 'rxjs';\nimport {\n  debounceTime,\n  distinctUntilChanged,\n  filter,\n  map,\n} from 'rxjs/operators';\n\nimport { Competition } from 'src/app/models/competition.model';\nimport { Repository } from 'src/app/services/repository.service';\nimport { Story } from 'src/app/models/story.model';\nimport { ToastService } from 'src/app/services/toast.service';\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n  selector: 'app-competition',\n  templateUrl: './competition.component.html',\n  styleUrls: ['./competition.component.scss'],\n})\nexport class CompetitionComponent implements OnInit {\n  public submitStory: any;\n  public stories: any[];\n  modalReference: NgbModalRef;\n\n  @ViewChild('instance', { static: true }) instance: NgbTypeahead;\n  focus$ = new Subject<string>();\n  click$ = new Subject<string>();\n\n  search: OperatorFunction<string, readonly { title; id }[]> = (\n    text$: Observable<string>\n  ) => {\n    const debouncedText$ = text$.pipe(\n      debounceTime(200),\n      distinctUntilChanged()\n    );\n    const clicksWithClosedPopup$ = this.click$.pipe(\n      filter(() => !this.instance?.isPopupOpen())\n    );\n    const inputFocus$ = this.focus$;\n\n    return merge(debouncedText$, inputFocus$, clicksWithClosedPopup$).pipe(\n      map((term) =>\n        term === ''\n          ? this.stories\n          : this.stories\n              .filter(\n                (v) => v.title?.toLowerCase().indexOf(term.toLowerCase()) > -1\n              )\n              .slice(0, 10)\n      )\n    );\n  };\n\n  formatter = (x: { title: string }) => x.title;\n\n  constructor(\n    private repo: Repository,\n    router: Router,\n    activeRoute: ActivatedRoute,\n    public userService: UserService,\n    private modalService: NgbModal,\n    private toastService: ToastService\n  ) {\n    let param = activeRoute.snapshot.params['param'];\n    if (param) {\n      this.repo.getCompetition(param);\n    } else {\n      router.navigateByUrl('/');\n    }\n  }\n\n  ngOnInit(): void {\n    this.userService.getCurrentUser().subscribe((u) => {\n      if (u) {\n        this.repo.getProfileStories$(u).subscribe((s) => {\n          if (s) {\n            this.stories = s;\n          }\n        });\n      }\n    });\n  }\n\n  get competition(): Competition {\n    return this.repo.competition;\n  }\n\n  get currentUserCompetitions(): number[] {\n    return this.repo.profileCompetitionsIds;\n  }\n\n  isCompetitionDisabled(id: number): boolean {\n    if (\n      this.userService.isUserLoggedIn() &&\n      this.currentUserCompetitions?.indexOf(id) != -1\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  open(content) {\n    //this.modalReference = this.modalService.open(content);\n\n    this.modalService\n      .open(content, { ariaLabelledBy: 'modal-basic-title' })\n      .result.then(\n        (result) => {},\n        (reason) => {}\n      );\n  }\n\n  submit() {\n    console.log(this.submitStory);\n    this.repo\n      .submitCompetionStory(this.competition, this.submitStory)\n      .subscribe((r) => {\n        this.showSuccessToast(r.message);\n        this.modalService.dismissAll();\n      });\n  }\n\n  showSuccessToast(message: string) {\n    this.toastService.show(message, {\n      classname: 'bg-success text-light',\n      delay: 5000,\n    });\n  }\n}\n","<app-navbar></app-navbar>\n\n<div class=\"container\">\n  <section class=\"competition-section\">\n    <div class=\"row\">\n      <div class=\"col-lg-7\">\n        <div class=\"row\">\n          <div class=\"col-12 mb-3\">\n            <h2 class=\"competition-name mb-3\">\n              {{ competition?.name }}\n            </h2>\n            <img\n              loading=\"lazy\"\n              class=\"competition-image img-fluid\"\n              alt=\"{{ competition?.name }}\"\n              src=\"https://picsum.photos/435/288?random={{ competition?.id }}\"\n            />\n          </div>\n          <div class=\"col-12 mb-3\">\n            <div class=\"competition-description\">\n              {{ competition?.description }}\n            </div>\n          </div>\n        </div>\n        <hr />\n        <div *ngIf=\"stories?.length > 0; else noStories\">\n          <article\n            *ngFor=\"let story of competition?.stories\"\n            class=\"clearfix pt-3 pb-5\"\n          >\n            <header class=\"article-header\">\n              <h2 class=\"article-title\">\n                <a\n                  href=\"#\"\n                  [routerLink]=\"['/stories', story?.slug]\"\n                  rel=\"bookmark\"\n                  >{{ story?.title }}</a\n                >\n              </h2>\n              <div class=\"article-meta text-muted\">\n                <div class=\"row\">\n                  <div class=\"col-12 small\">\n                    <span class=\"screen-reader-text\">Published on </span>\n                    <time class=\"article-date published\">{{\n                      story?.created_at | date: \"mediumDate\"\n                    }}</time>\n                  </div>\n                </div>\n              </div>\n            </header>\n            <div class=\"article-content\">\n              <div class=\"row\">\n                <div class=\"col-12 col-md-4\">\n                  <img\n                    loading=\"lazy\"\n                    class=\"article-image img-fluid\"\n                    alt=\"{{ story?.title }}\"\n                    src=\"https://picsum.photos/435/288?random={{ story?.id }}\"\n                    width=\"435\"\n                    height=\"288\"\n                  />\n                </div>\n                <div class=\"col-12 col-md-8\">\n                  <div class=\"article-content-summary\">\n                    {{ story?.summary }}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </article>\n        </div>\n        <ng-template #noStories> There are no stories yet. </ng-template>\n      </div>\n      <div class=\"col-lg-4 ml-auto order-first order-lg-last\">\n        <div class=\"card border-light shadow mb-5\">\n          <div class=\"card-body py-5\">\n            <div class=\"d-flex flex-column align-items-center\">\n              <div class=\"text-center\">\n                <h3 class=\"mb-3\">{{ competition?.name }}</h3>\n                <h4 class=\"mb-3\">\n                  {{ competition?.reward | currency: \"GBP\":\"symbol\":\"1.2-2\" }}\n                </h4>\n                <div class=\"progress mb-3\">\n                  <div\n                    class=\"progress-bar\"\n                    role=\"progressbar\"\n                    style=\"width: 25%\"\n                    aria-valuenow=\"25\"\n                    aria-valuemin=\"0\"\n                    aria-valuemax=\"100\"\n                  ></div>\n                </div>\n                <p class=\"text-muted mb-5\">\n                  {{ competition?.deadline | date: \"MMM d, y, h:mm a\" }}\n                </p>\n\n                <a\n                  href=\"#\"\n                  [routerLink]=\"[\n                    '/members/competitions/enter',\n                    competition?.slug\n                  ]\"\n                  class=\"btn btn-primary btn-block\"\n                  *ngIf=\"\n                    !isCompetitionDisabled(competition?.id);\n                    else competitionDisabled\n                  \"\n                  >Enter now</a\n                >\n                <ng-template #competitionDisabled>\n                  <button\n                    class=\"btn btn-primary btn-block\"\n                    (click)=\"open(content)\"\n                  >\n                    Submit a story\n                  </button>\n                </ng-template>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>\n</div>\n<ng-template #content let-modal>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title\" id=\"modal-basic-title\">Submit a story</h4>\n    <button\n      type=\"button\"\n      class=\"close\"\n      aria-label=\"Close\"\n      (click)=\"modal.dismiss('Cross click')\"\n    >\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n  </div>\n  <div class=\"modal-body\">\n    <form>\n      <div class=\"form-group\">\n        <ng-template #st let-r=\"result\" let-t=\"term\">\n          <div class=\"p-3\">\n            <img\n              [src]=\"'https://picsum.photos/435/288?random=' + r['id']\"\n              class=\"mr-1\"\n              style=\"width: 16px\"\n            />\n            <ngb-highlight [result]=\"r.title\" [term]=\"t\"></ngb-highlight>\n          </div>\n        </ng-template>\n        <label for=\"submitStory\">Select one of your stories</label>\n        <input\n          id=\"submitStory\"\n          class=\"form-control\"\n          placeholder=\"Start typing...\"\n          name=\"submitStory\"\n          [(ngModel)]=\"submitStory\"\n          [ngbTypeahead]=\"search\"\n          [resultTemplate]=\"st\"\n          [inputFormatter]=\"formatter\"\n          (focus)=\"focus$.next($any($event).target.value)\"\n          (click)=\"click$.next($any($event).target.value)\"\n          #instance=\"ngbTypeahead\"\n        />\n      </div>\n    </form>\n  </div>\n  <div class=\"modal-footer\">\n    <button type=\"button\" class=\"btn btn-primary\" (click)=\"submit()\">\n      Submit\n    </button>\n    <button\n      type=\"button\"\n      class=\"btn btn-outline-primary\"\n      (click)=\"modal.close()\"\n    >\n      Close\n    </button>\n  </div>\n</ng-template>\n","import { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { AdminModule } from './admin/admin.module';\r\nimport { AppComponent } from './app.component';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AuthInterceptor } from './interceptors/auth.interceptor';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { CommentEditorComponent } from './structure/comment-editor/comment-editor.component';\r\nimport { CompetitionComponent } from './structure/competition/competition.component';\r\nimport { CompetitionsListComponent } from './structure/competitions-list/competitions-list.component';\r\nimport { DebounceClickDirective } from './directives/debounce-click.directive';\r\nimport { ErrorHandlerService } from './services/error-handler.service';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { ModelModule } from './models/model.module';\r\nimport { NavbarComponent } from './structure/navbar/navbar.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { PagesModule } from './pages/pages.module';\r\nimport { ProfileComponent } from './structure/profile/profile.component';\r\nimport { ScrollProgressDirective } from './directives/scroll-progress.directive';\r\nimport { SharedModule } from './shared/shared.module';\r\nimport { StoriesListComponent } from './structure/stories-list/stories-list.component';\r\nimport { StoryDetailComponent } from './structure/story-detail/story-detail.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    StoriesListComponent,\r\n    StoryDetailComponent,\r\n    NavbarComponent,\r\n    CommentEditorComponent,\r\n    DebounceClickDirective,\r\n    ScrollProgressDirective,\r\n    ProfileComponent,\r\n    CompetitionComponent,\r\n    CompetitionsListComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    ModelModule,\r\n    AdminModule,\r\n    PagesModule,\r\n    BrowserAnimationsModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    SharedModule,\r\n    NgbModule\r\n  ],\r\n  providers: [\r\n    ErrorHandlerService,\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useExisting: ErrorHandlerService,\r\n      multi: true,\r\n    },\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useExisting: AuthInterceptor,\r\n      multi: true,\r\n    },\r\n  ],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss'],\n})\nexport class RegisterComponent implements OnInit {\n  registerForm: FormGroup;\n  showError: boolean = false;\n  constructor(private fb: FormBuilder, private http: HttpClient, private router: Router,) {}\n\n  ngOnInit(): void {\n    this.registerForm = this.fb.group({\n      username: ['', Validators.required],\n      first_name: ['', Validators.required],\n      last_name: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required],\n      password_confirmation: ['', Validators.required],\n    });\n  }\n\n  onSubmit(): void {\n    const formData = this.registerForm.getRawValue();\n    this.http.post('/api/user', formData).subscribe(\n      (response) => {\n        console.log(response);\n        this.registerForm.reset();\n        this.router.navigate(['/members/login']);\n      },\n      (error) => {\n        console.log(error);\n        this.showError = true;\n      }\n    );\n  }\n  get email() {\n    return this.registerForm.get('email');\n  }\n  get username() {\n    return this.registerForm.get('username');\n  }\n  get first_name() {\n    return this.registerForm.get('first_name');\n  }\n  get last_name() {\n    return this.registerForm.get('last_name');\n  }\n  get password() {\n    return this.registerForm.get('password');\n  }\n  get password_confirmation() {\n    return this.registerForm.get('password_confirmation');\n  }\n}\n","<div class=\"container-fluid h-100\">\n  <div class=\"row no-gutters h-100\">\n    <div class=\"col-lg-6\">\n      <div class=\"signup-bg\"></div>\n    </div>\n    <div class=\"col-lg-6 h-100\">\n      <section class=\"page-section h-100 bg-white\">\n        <header class=\"section-header\">\n          <h1 class=\"section-title text-center\">Sign Up</h1>\n        </header>\n        <main>\n          <div class=\"row\">\n            <div class=\"col-10 col-md-6 mx-auto\">\n              <p *ngIf=\"showError\" class=\"alert alert-danger\">\n                An error occurred\n              </p>\n              <form [formGroup]=\"registerForm\" (submit)=\"onSubmit()\">\n                <div class=\"form-group\">\n                  <label>Username:</label>\n                  <input\n                    name=\"username\"\n                    class=\"form-control\"\n                    formControlName=\"username\"\n                    placeholder=\"Username\"\n                  />\n                  <div\n                    *ngIf=\"\n                      username.invalid && (username.dirty || username.touched)\n                    \"\n                    class=\"text-danger my-2\"\n                  >\n                    <div *ngIf=\"username.errors.required\">\n                      Username is required.\n                    </div>\n                  </div>\n                </div>\n                <div class=\"form-group\">\n                  <label>First name:</label>\n                  <input\n                    name=\"username\"\n                    class=\"form-control\"\n                    formControlName=\"first_name\"\n                    placeholder=\"First name\"\n                  />\n                  <div\n                    *ngIf=\"\n                      first_name.invalid &&\n                      (first_name.dirty || first_name.touched)\n                    \"\n                    class=\"text-danger my-2\"\n                  >\n                    <div *ngIf=\"first_name.errors.required\">\n                      First name is required.\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"form-group\">\n                  <label>Last name:</label>\n                  <input\n                    name=\"last_name\"\n                    class=\"form-control\"\n                    formControlName=\"last_name\"\n                    placeholder=\"Last name\"\n                  />\n                  <div\n                    *ngIf=\"\n                      last_name.invalid &&\n                      (last_name.dirty || last_name.touched)\n                    \"\n                    class=\"text-danger my-2\"\n                  >\n                    <div *ngIf=\"last_name.errors.required\">\n                      Last name is required.\n                    </div>\n                  </div>\n                </div>\n                <div class=\"form-group\">\n                  <label>Email:</label>\n                  <input\n                    name=\"email\"\n                    class=\"form-control\"\n                    formControlName=\"email\"\n                    placeholder=\"Email\"\n                  />\n                  <div\n                    *ngIf=\"email.invalid && (email.dirty || email.touched)\"\n                    class=\"text-danger my-2\"\n                  >\n                    <div *ngIf=\"email.errors.email\">Email is incorrect.</div>\n                    <div *ngIf=\"email.errors.required\">Email is required.</div>\n                  </div>\n                </div>\n                <div class=\"form-group\">\n                  <label>Password:</label>\n                  <input\n                    type=\"password\"\n                    name=\"password\"\n                    class=\"form-control\"\n                    formControlName=\"password\"\n                    placeholder=\"Password\"\n                  />\n                  <div\n                    *ngIf=\"\n                      password.invalid && (password.dirty || password.touched)\n                    \"\n                    class=\"text-danger my-2\"\n                  >\n                    <div *ngIf=\"password.errors.required\">\n                      Password is required.\n                    </div>\n                  </div>\n                </div>\n                <div class=\"form-group\">\n                  <label>Confirm Password:</label>\n                  <input\n                    type=\"password\"\n                    name=\"confirmPassword\"\n                    class=\"form-control\"\n                    formControlName=\"password_confirmation\"\n                    placeholder=\"Password confirmation\"\n                  />\n                  <div\n                    *ngIf=\"\n                      password_confirmation.invalid &&\n                      (password_confirmation.dirty ||\n                        password_confirmation.touched)\n                    \"\n                    class=\"text-danger my-2\"\n                  >\n                    <div *ngIf=\"password_confirmation.errors.required\">\n                      Password confirmation is required.\n                    </div>\n                  </div>\n                </div>\n                <div class=\"text-center pt-2\">\n                  <button\n                    class=\"btn btn-primary\"\n                    [disabled]=\"!registerForm.valid\"\n                  >\n                    Sign Up\n                  </button>\n                  <p class=\"mt-5\">\n                    Back to\n                    <a\n                      href=\"#\"\n                      routerLink=\"/home\"\n                      routerLinkActive=\"active\"\n                      [routerLinkActiveOptions]=\"{ exact: true }\"\n                      >Homepage</a\n                    >\n                  </p>\n                </div>\n              </form>\n            </div>\n          </div>\n        </main>\n      </section>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { UserService } from '../../services/user.service';\nimport { environment } from '../../../environments/environment';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup;\n  showError: boolean = false;\n  public isMenuCollapsed = true;\n\n  constructor(\n    private fb: FormBuilder,\n    private http: HttpClient,\n    private router: Router,\n    private userService: UserService\n  ) {}\n\n  ngOnInit(): void {\n    this.loginForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required],\n    });\n  }\n\n  onSubmit(): void {\n    const formData = this.loginForm.getRawValue();\n    const data = {\n      username: formData.email,\n      password: formData.password,\n      grant_type: 'password',\n      client_id: environment.oauth_client_id,\n      client_secret: environment.oauth_client_secret,\n      scope: 'member',\n    };\n\n    this.http.post('/api/auth/login', data).subscribe(\n      (result: any) => {\n        console.log('success');\n        console.log(result);\n        this.userService.login(result.access_token);\n        this.loginForm.reset();\n        this.router.navigate(['/members/overview']);\n      },\n      (error) => {\n        console.log('error');\n        console.log(error);\n        this.showError = true;\n      }\n    );\n  }\n\n  get email() {\n    return this.loginForm.get('email');\n  }\n  get password() {\n    return this.loginForm.get('password');\n  }\n}\n","<div class=\"navbar navbar-expand-lg navbar-light border-light shadow-sm bg-light\">\n  <div class=\"container\">\n    <a\n      href=\"#\"\n      routerLink=\"/home\"\n      routerLinkActive=\"active\"\n      [routerLinkActiveOptions]=\"{ exact: true }\"\n      class=\"navbar-brand\"\n      >Readible</a\n    >\n    <button\n      class=\"navbar-toggler\"\n      type=\"button\"\n      (click)=\"isMenuCollapsed = !isMenuCollapsed\"\n    >\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n\n    <div [ngbCollapse]=\"isMenuCollapsed\" class=\"collapse navbar-collapse\">\n      <ul class=\"navbar-nav ml-auto\">\n        <li class=\"nav-item\">\n          <a\n            class=\"nav-link\"\n            href=\"#\"\n            routerLink=\"/stories\"\n            routerLinkActive=\"active\"\n            [routerLinkActiveOptions]=\"{ exact: true }\"\n            >Stories</a\n          >\n        </li>\n        <li class=\"nav-item\">\n          <a\n            class=\"nav-link\"\n            href=\"#\"\n            routerLink=\"/about\"\n            routerLinkActive=\"active\"\n            [routerLinkActiveOptions]=\"{ exact: true }\"\n            >About</a\n          >\n        </li>\n      </ul>\n    </div>\n  </div>\n</div>\n\n<div class=\"container\">\n  <section class=\"page-section\">\n    <header class=\"section-header\">\n      <h1 class=\"section-title text-center\">Sign In</h1>\n    </header>\n    <main>\n      <div class=\"row\">\n        <div class=\"col-10 col-md-6 mx-auto\">\n          <p *ngIf=\"showError\" class=\"alert alert-danger\">\n            Invalid username or password\n          </p>\n          <form [formGroup]=\"loginForm\" (submit)=\"onSubmit()\">\n            <div class=\"form-group\">\n              <label>Email:</label>\n              <input\n                type=\"email\"\n                class=\"form-control\"\n                placeholder=\"Email\"\n                formControlName=\"email\"\n              />\n              <div\n                *ngIf=\"email.invalid && (email.dirty || email.touched)\"\n                class=\"text-danger my-2\"\n              >\n                <div *ngIf=\"email.errors.email\">Email is incorrect.</div>\n                <div *ngIf=\"email.errors.required\">Email is required.</div>\n              </div>\n            </div>\n            <div class=\"form-group\">\n              <label>Password:</label>\n              <input\n                type=\"password\"\n                class=\"form-control\"\n                formControlName=\"password\"\n                placeholder=\"Password\"\n              />\n              <div\n                *ngIf=\"password.invalid && (password.dirty || password.touched)\"\n                class=\"text-danger my-2\"\n              >\n                <div *ngIf=\"password.errors.required\">\n                  Password is required.\n                </div>\n              </div>\n            </div>\n            <div class=\"text-center pt-2\">\n              <button class=\"btn btn-primary\" [disabled]=\"!loginForm.valid\">\n                Sign In\n              </button>\n              <p class=\"mt-5\">\n                Don't have an account?\n                <a\n                  href=\"#\"\n                  routerLink=\"/members/join\"\n                  routerLinkActive=\"active\"\n                  [routerLinkActiveOptions]=\"{ exact: true }\"\n                  >Sign Up</a\n                >\n              </p>\n            </div>\n          </form>\n        </div>\n      </div>\n    </main>\n  </section>\n</div>\n","import { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { CommonModule } from '@angular/common';\nimport { LandingPageComponent } from './landing-page/landing-page.component';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from \"@angular/router\";\n\n@NgModule({\n  declarations: [LandingPageComponent],\n  exports: [LandingPageComponent],\n  imports: [CommonModule, ReactiveFormsModule, RouterModule, FormsModule],\n  providers: [],\n})\nexport class PagesModule {}\n","import { Observable, of } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\n\nimport { Injectable } from '@angular/core';\nimport { Repository } from './repository.service';\nimport { Router } from '@angular/router';\n\n@Injectable()\nexport class AuthenticationService {\n  constructor(private repo: Repository, private router: Router) {}\n  authenticated: boolean = false;\n  name: string;\n  email: string;\n  password: string;\n  confirmPassword: string;\n  callbackUrl: string;\n\n  register(): Observable<boolean> {\n    return this.repo\n      .register(this.name, this.email, this.password, this.confirmPassword)\n      .pipe(\n        map((response) => {\n          if (response) {\n            this.password = null;\n            this.router.navigateByUrl(this.callbackUrl || '/members/login');\n          }\n          return false;\n        }),\n        catchError((e) => {\n          this.authenticated = false;\n          return of(false);\n        })\n      );\n  }\n  login(): Observable<boolean> {\n    this.authenticated = false;\n    return this.repo.login(this.name, this.password).pipe(\n      map((response) => {\n        if (response) {\n          this.authenticated = true;\n          this.password = null;\n          this.router.navigateByUrl(this.callbackUrl || '/members/overview');\n        }\n        return this.authenticated;\n      }),\n      catchError((e) => {\n        this.authenticated = false;\n        return of(false);\n      })\n    );\n  }\n  logout() {\n    this.authenticated = false;\n    this.repo.logout();\n    this.router.navigateByUrl('/members/login');\n  }\n}\n","<app-navbar></app-navbar>\n\n<div class=\"container\">\n  <section class=\"page-section\">\n    <header class=\"section-header\">\n      <h1 class=\"section-title\">Competitions</h1>\n    </header>\n    <div class=\"row\">\n      <div class=\"col-lg-12\">\n        <div\n          *ngIf=\"competitions?.length > 0; else noCompetitions\"\n          class=\"card-columns\"\n        >\n          <a\n            href=\"#\"\n            [routerLink]=\"['/competitions', competition?.slug]\"\n            *ngFor=\"let competition of competitions\"\n            class=\"d-block\"\n          >\n            <div class=\"card border-0 shadow mb-3\" *ngIf=\"!isCompetitionDisabled(competition?.id); else competitionDisabled\">\n              <img\n                class=\"card-img-top\"\n                alt=\"\"\n                src=\"https://picsum.photos/368/160?random={{ competition?.id }}\"\n                style=\"height: 160px; width: 100%; display: block\"\n              />\n              <div class=\"card-body\">\n                <h5 class=\"card-title\">{{ competition?.name }}</h5>\n                <p class=\"card-text\" style=\"height: 50px;\" ellipsis>{{ competition?.description }}</p>\n                <p class=\"card-text\">\n                  <small class=\"text-muted\"\n                    >Ends {{ competition?.deadline | date: \"medium\" }}</small\n                  >\n                </p>\n              </div>\n            </div>\n            <ng-template #competitionDisabled>\n              <div class=\"card bg-primary text-light border-0 shadow mb-3\">\n                <img\n                  class=\"card-img-top\"\n                  alt=\"\"\n                  src=\"https://picsum.photos/368/160?random={{ competition?.id }}\"\n                  style=\"height: 160px; width: 100%; display: block\"\n                />\n                <div class=\"card-body\">\n                  <h5 class=\"card-title\">{{ competition?.name }}</h5>\n                  <p class=\"card-text\" style=\"height: 50px;\" ellipsis>{{ competition?.description }}</p>\n                  <p class=\"card-text\">\n                    <small class=\"text-muted\"\n                      >Ends {{ competition?.deadline | date: \"medium\" }}</small\n                    >\n                  </p>\n                </div>\n                <i-feather name=\"check-square\"></i-feather>\n              </div>\n            </ng-template>\n          </a>\n        </div>\n        <ng-template #noCompetitions>\n          There are no competitions yet.\n        </ng-template>\n      </div>\n    </div>\n  </section>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\nimport { Competition } from 'src/app/models/competition.model';\nimport { Repository } from 'src/app/services/repository.service';\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n  selector: 'app-competitions-list',\n  templateUrl: './competitions-list.component.html',\n  styleUrls: ['./competitions-list.component.scss'],\n})\nexport class CompetitionsListComponent implements OnInit {\n  constructor(private repo: Repository, public userService: UserService) {}\n\n  ngOnInit(): void {\n    this.repo.getCompetitions();\n  }\n  get competitions(): Competition[] {\n    return this.repo.competitions;\n  }\n  get currentUserCompetitions(): number[] {\n    return this.repo.profileCompetitionsIds;\n  }\n\n  isCompetitionDisabled(id: number): boolean {\n    if (this.userService.isUserLoggedIn() && this.currentUserCompetitions?.indexOf(id) != -1) {\n      return true;\n    }\n    return false;\n  }\n}\n","import { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { AdminComponent } from './admin.component';\r\nimport { AuthModule } from '../auth/authentication.module';\r\nimport { AuthenticationGuard } from '../auth/authentication.guard';\r\nimport { CompetitionCheckoutComponent } from './competition-checkout/competition-checkout.component';\r\nimport { LoginComponent } from '../auth/login/login.component';\r\nimport { LoginGuard } from '../auth/login.guard';\r\nimport { NgModule } from '@angular/core';\r\nimport { OverviewComponent } from './overview/overview.component';\r\nimport { RegisterComponent } from '../auth/register/register.component';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { StoryEditorComponent } from './story-editor/story-editor.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'join', component: RegisterComponent },\r\n  { path: 'login', component: LoginComponent, canActivate: [LoginGuard] },\r\n  {\r\n    path: '',\r\n    component: AdminComponent,\r\n    canActivateChild: [AuthenticationGuard],\r\n    children: [\r\n      { path: 'competitions/enter/:param', component: CompetitionCheckoutComponent },\r\n      { path: 'overview', component: OverviewComponent },\r\n      { path: 'create', component: StoryEditorComponent },\r\n      { path: '', component: OverviewComponent },\r\n    ],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  declarations: [AdminComponent, OverviewComponent, StoryEditorComponent, CompetitionCheckoutComponent],\r\n  imports: [\r\n    RouterModule.forChild(routes),\r\n    AuthModule, SharedModule\r\n  ],\r\n})\r\nexport class AdminModule {}\r\n","<div class=\"container my-5\">\n  <h1 class=\"page-title\">Submit a Story</h1>\n  <div class=\"row no-gutters\">\n    <div class=\"col-lg-10 mb-5\">\n      <form name=\"form\"\n      (ngSubmit)=\"f.form.valid && submit(f)\"\n      #f=\"ngForm\"\n      novalidate>\n        <div class=\"form-group\">\n          <label>Title</label>\n          <input\n            class=\"form-control\"\n            name=\"title\"\n            placeholder=\"Enter a title\"\n            [(ngModel)]=\"model.title\"\n            #title=\"ngModel\"\n            [ngClass]=\"{ 'is-invalid': f.submitted && title.invalid }\"\n            required\n          />\n          <div *ngIf=\"f.submitted && title.invalid\" class=\"invalid-feedback\">\n            <div *ngIf=\"title.errors.required\">This field is required</div>\n          </div>\n        </div>\n        <div class=\"form-group\">\n          <label>Summary</label>\n          <textarea\n            class=\"form-control\"\n            name=\"summary\"\n            rows=\"5\"\n            placeholder=\"Enter a summary\"\n            [(ngModel)]=\"model.summary\"\n            #summary=\"ngModel\"\n            [ngClass]=\"{ 'is-invalid': f.submitted && summary.invalid }\"\n            required\n          ></textarea>\n          <div *ngIf=\"f.submitted && summary.invalid\" class=\"invalid-feedback\">\n            <div *ngIf=\"summary.errors.required\">This field is required</div>\n          </div>\n        </div>\n        <div class=\"form-group\">\n          <label>Story</label>\n          <textarea\n            class=\"form-control\"\n            name=\"body\"\n            rows=\"15\"\n            placeholder=\"Enter a story\"\n            [(ngModel)]=\"model.body\"\n            #body=\"ngModel\"\n            [ngClass]=\"{ 'is-invalid': f.submitted && body.invalid }\"\n            required\n          ></textarea>\n          <div *ngIf=\"f.submitted && body.invalid\" class=\"invalid-feedback\">\n            <div *ngIf=\"body.errors.required\">This field is required</div>\n          </div>\n        </div>\n        <button class=\"btn btn-primary\">Submit</button>\n      </form>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\nimport { NgForm } from '@angular/forms';\nimport { Repository } from '../../services/repository.service';\nimport { Router } from '@angular/router';\nimport { Story } from '../../models/story.model';\nimport { ToastService } from 'src/app/services/toast.service';\n\n@Component({\n  selector: 'app-story-editor',\n  templateUrl: './story-editor.component.html',\n  styleUrls: ['./story-editor.component.scss'],\n})\nexport class StoryEditorComponent implements OnInit {\n  model: any = {};\n  constructor(private repo: Repository, private router: Router, private toastService: ToastService) {}\n  ngOnInit(): void {}\n  get story(): Story {\n    return this.repo.story;\n  }\n  submit(form: NgForm) {\n    const data = {\n      title: this.model.title,\n      summary: this.model.summary,\n      body: this.model.body,\n    };\n    this.repo.createStory(data).subscribe(() => {\n      this.showSuccessToast('Story submitted');\n      this.router.navigateByUrl('/members/overview');\n      form.reset();\n    });\n  }\n\n  showSuccessToast(message: string) {\n    this.toastService.show(message, {\n      classname: 'bg-success text-light',\n      delay: 5000,\n    });\n  }\n}\n","import {\n  ActivatedRouteSnapshot,\n  Router,\n  RouterStateSnapshot,\n} from '@angular/router';\n\nimport { Injectable } from '@angular/core';\nimport { UserService } from '../services/user.service';\n\n@Injectable()\nexport class AuthenticationGuard {\n  constructor(\n    private router: Router,\n    private userService: UserService\n  ) {}\n  canActivateChild(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): boolean {\n    if (this.userService.isUserLoggedIn()) {\n      return true;\n    } else {\n      this.router.navigateByUrl('/members/login');\n      return false;\n    }\n  }\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): boolean {\n    if (this.userService.isUserLoggedIn()) {\n      return true;\n    } else {\n      this.router.navigateByUrl('/members/login');\n      return false;\n    }\n  }\n}\n","<app-navbar></app-navbar>\r\n<div class=\"container\">\r\n  <section class=\"page-section\">\r\n    <main>\r\n      <article class=\"clearfix pt-3\" appScrollProgress>\r\n        <header class=\"article-header\">\r\n          <h2 class=\"article-title\">\r\n            <a\r\n              href=\"#\"\r\n              [routerLink]=\"['/stories', story?.slug]\"\r\n              rel=\"bookmark\"\r\n              >{{ story?.title }}</a\r\n            >\r\n          </h2>\r\n          <div class=\"article-meta text-muted\">\r\n            <div class=\"row\">\r\n              <div class=\"col-12 col-md-8\">\r\n                <span class=\"screen-reader-text\">Published on </span>\r\n                <time class=\"article-date published\">{{\r\n                  story?.created_at | date: \"mediumDate\"\r\n                }}</time>\r\n                <span class=\"screen-reader-text\">, by </span>\r\n                <a href=\"#\" [routerLink]=\"['/profiles', story?.author?.username]\">{{ story?.author?.username }}</a>\r\n              </div>\r\n              <div class=\"col-12 col-md-4\">\r\n                <div class=\"text-body text-md-right mt-3 mt-md-0\">\r\n                  <button class=\"btn btn-link px-2\" (click)=\"scroll(commentsArea)\">\r\n                    {{ story?.comments_count }}\r\n                    <i-feather\r\n                      name=\"message-square\"\r\n                      class=\"ml-1 py-0\"\r\n                    ></i-feather>\r\n                  </button>\r\n                  <button\r\n                    appDebounceClick\r\n                    (debounceClick)=\"like()\"\r\n                    [debounceTime]=\"1000\"\r\n                    class=\"btn btn-link px-2 py-0\"\r\n                  >\r\n                    {{ story?.likes_count }}\r\n                    <i-feather name=\"heart\" class=\"ml-1\"></i-feather>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </header>\r\n        <div class=\"article-content\">\r\n          <div class=\"row\">\r\n            <div class=\"col-12\">\r\n              <img\r\n                loading=\"lazy\"\r\n                class=\"article-image img-fluid\"\r\n                alt=\"{{ story?.title }}\"\r\n                src=\"https://picsum.photos/435/288?random={{ story?.id }}\"\r\n                width=\"435\"\r\n                height=\"288\"\r\n              />\r\n            </div>\r\n            <div class=\"col-12\">\r\n              <div class=\"article-content-body\">{{ story?.body }}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </article>\r\n\r\n      <hr />\r\n      <div #commentsArea>\r\n        <div *ngIf=\"story && userService.isUserLoggedIn()\">\r\n          <app-comment-editor [story]=\"story\"></app-comment-editor>\r\n          <hr />\r\n        </div>\r\n        <div *ngIf=\"comments?.length > 0; else noComments\">\r\n          <h3 class=\"mb-3\">Comments({{ comments.length }})</h3>\r\n          <article\r\n            *ngFor=\"let comment of comments\"\r\n            class=\"clearfix bg-gray p-3 mb-3\"\r\n          >\r\n            <header class=\"comment-header\">\r\n              <div class=\"comment-meta text-muted\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-12 col-md-12 mb-3\">\r\n                    <a href=\"#\" [routerLink]=\"['/profiles', comment?.author?.username]\">{{ comment?.author?.username }}</a\r\n                    ><br />\r\n                    <time class=\"comment-date published small\">{{\r\n                      (comment?.created_at | date: \"MMM d, y, h:mm a\") ||\r\n                        \"just now\"\r\n                    }}</time>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </header>\r\n            <div class=\"comment-content\">\r\n              <div class=\"row\">\r\n                <div class=\"col-12 col-md-12\">\r\n                  {{ comment?.body }}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </article>\r\n        </div>\r\n        <ng-template #noComments> There are no comments yet. </ng-template>\r\n      </div>\r\n    </main>\r\n  </section>\r\n</div>\r\n","import { ActivatedRoute, Router } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\n\nimport { Comment } from '../../models/comment.model';\nimport { Repository } from '../../services/repository.service';\nimport { Story } from '../../models/story.model';\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n  selector: 'app-story-detail',\n  templateUrl: './story-detail.component.html',\n  styleUrls: ['./story-detail.component.scss'],\n})\nexport class StoryDetailComponent implements OnInit {\n  constructor(\n    private repo: Repository,\n    router: Router,\n    activeRoute: ActivatedRoute,\n    public userService: UserService\n  ) {\n    let param = activeRoute.snapshot.params['param'];\n    if (param) {\n      this.repo.getStory(param);\n    } else {\n      router.navigateByUrl('/');\n    }\n  }\n\n  get story(): Story {\n    return this.repo.story;\n  }\n\n  get comments(): Comment[] {\n    return this.repo.comments;\n  }\n\n  ngOnInit(): void {}\n\n  like(): void {\n    console.log('like');\n    this.repo.likeStory(this.story);\n  }\n\n  scroll(el: HTMLElement) {\n    el.scrollIntoView({ behavior: 'smooth' });\n  }\n}\n","import { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ToastService } from './toast.service';\nimport { User } from '../models/user.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserService {\n  private loggedIn$ = new BehaviorSubject<any>(false);\n  private currentUserSubject$ = new BehaviorSubject<User>(null);\n  public currentUser: User;\n  constructor(\n    private http: HttpClient,\n    private router: Router,\n    private toastService: ToastService\n  ) {}\n\n  login(token: any): void {\n    console.log('logging in...');\n    localStorage.setItem('token', token);\n    this.reloadUserData();\n    this.router.navigateByUrl('/members/overview');\n  }\n\n  logout(): void {\n    console.log('logging out...');\n    localStorage.removeItem('token');\n    this.currentUserSubject$.next(null);\n    this.loggedIn$.next(false);\n    this.router.navigateByUrl('/');\n\n    this.showStandardToast('You have been logged out');\n  }\n\n  isUserLoggedIn(): boolean {\n    return this.loggedIn$.getValue();\n  }\n\n  public getCurrentUser(): Observable<User> {\n    return this.currentUserSubject$.asObservable();\n  }\n\n  public reloadUserData(): void {\n    this.http.get('/api/user').subscribe(\n      (result) => {\n        this.currentUserSubject$.next(result);\n        this.currentUserSubject$.subscribe((u) => {\n          this.currentUser = u;\n        });\n        this.loggedIn$.next(true);\n      },\n      (error) => {\n        this.logout();\n      }\n    );\n    this.loggedIn$.next(true);\n  }\n\n  showStandardToast(message: string) {\n    this.toastService.show(message);\n  }\n}\n","import {\r\n  Directive,\r\n  EventEmitter,\r\n  HostListener,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output\r\n} from '@angular/core';\r\nimport { Subject, Subscription } from 'rxjs';\r\n\r\nimport { debounceTime } from 'rxjs/operators';\r\n\r\n@Directive({\r\n  selector: '[appDebounceClick]'\r\n})\r\nexport class DebounceClickDirective implements OnInit, OnDestroy {\r\n  @Input() debounceTime = 500;\r\n  @Output() debounceClick = new EventEmitter();\r\n  private clicks = new Subject();\r\n  private subscription: Subscription;\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit() {\r\n    this.subscription = this.clicks\r\n      .pipe(debounceTime(this.debounceTime))\r\n      .subscribe(e => this.debounceClick.emit(e));\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  @HostListener('click', ['$event'])\r\n  clickEvent(event) {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    this.clicks.next(event);\r\n  }\r\n}\r\n","import { CheckSquare, Heart, MessageSquare } from 'angular-feather/icons';\n\nimport { FeatherModule } from 'angular-feather';\nimport { NgModule } from '@angular/core';\n\nconst icons = {\n  MessageSquare,\n  Heart, CheckSquare\n};\n\n@NgModule({\n  imports: [\n    FeatherModule.pick(icons)\n  ],\n  exports: [\n    FeatherModule\n  ]\n})\nexport class IconsModule { }\n","import { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { CompetitionComponent } from './structure/competition/competition.component';\r\nimport { CompetitionsListComponent } from './structure/competitions-list/competitions-list.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { ProfileComponent } from './structure/profile/profile.component';\r\nimport { StoriesListComponent } from './structure/stories-list/stories-list.component';\r\nimport { StoryDetailComponent } from './structure/story-detail/story-detail.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'members',\r\n    loadChildren: () =>\r\n      import('./admin/admin.module').then((module) => module.AdminModule),\r\n  },\r\n  { path: 'stories', component: StoriesListComponent },\r\n  { path: 'stories/:param', component: StoryDetailComponent },\r\n  { path: 'competitions', component: CompetitionsListComponent },\r\n  { path: 'competitions/:param', component: CompetitionComponent },\r\n  { path: 'profiles/:param', component: ProfileComponent },\r\n  { path: '**', redirectTo: 'stories' },\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forRoot(routes, { scrollPositionRestoration: 'enabled' }),\r\n  ],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Story } from './story.model';\r\nimport { User } from './user.model';\r\n\r\nexport class Comment {\r\n  constructor(\r\n    public id?: number,\r\n    public story?: Story,\r\n    public body?: string,\r\n    public author?: User,\r\n    public created_at?: Date,\r\n    public updated_at?: Date\r\n  ) {}\r\n}\r\n","import { Comment } from '../models/comment.model';\r\nimport { Competition } from '../models/competition.model';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\nimport { Story } from '../models/story.model';\r\nimport { ToastService } from './toast.service';\r\nimport { User } from '../models/user.model';\r\nimport { UserService } from './user.service';\r\nimport { map } from 'rxjs/operators';\r\n\r\nconst storiesUrl = '/api/stories';\r\nconst commentsUrl = '/api/comments';\r\nconst likesUrl = '/api/likes';\r\nconst profilesUrl = '/api/profiles';\r\nconst competitionsUrl = '/api/competitions';\r\n\r\n@Injectable()\r\nexport class Repository {\r\n  story: Story;\r\n  stories: Story[];\r\n  profileStories: Story[];\r\n  profileCompetitions: Competition[];\r\n  profileCompetitionsIds: number[];\r\n  comments: Comment[];\r\n  profile: User;\r\n  competitions: Competition[];\r\n  competition: Competition;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private userService: UserService,\r\n    private router: Router,\r\n    private toastService: ToastService\r\n  ) {\r\n    this.getStories();\r\n  }\r\n\r\n  getStory(param: any) {\r\n    this.http.get<Story>(`${storiesUrl}/${param}`).subscribe((s) => {\r\n      this.story = s;\r\n      this.getComments(s);\r\n    });\r\n  }\r\n\r\n  getStories() {\r\n    let url = `${storiesUrl}`;\r\n    this.http.get<Story[]>(url).subscribe((s) => (this.stories = s));\r\n  }\r\n\r\n  getProfileStories(param: any) {\r\n    let url = `${profilesUrl}/${param}/stories`;\r\n    this.http.get<Story[]>(url).subscribe((s) => (this.profileStories = s));\r\n  }\r\n\r\n  register(\r\n    name: string,\r\n    email: string,\r\n    password: string,\r\n    confirmPassword: string\r\n  ): Observable<boolean> {\r\n    return this.http.post<boolean>('/api/account/register', {\r\n      username: name,\r\n      email: email,\r\n      password: password,\r\n      confirmPassword: confirmPassword,\r\n    });\r\n  }\r\n\r\n  login(name: string, password: string): Observable<boolean> {\r\n    return this.http.post<boolean>('/api/account/login', {\r\n      name: name,\r\n      password: password,\r\n    });\r\n  }\r\n\r\n  logout() {\r\n    this.http.post('/api/account/logout', null).subscribe((response) => {});\r\n  }\r\n\r\n  createStory(s: Story): Observable<any> {\r\n    let data = {\r\n      title: s.title,\r\n      summary: s.summary,\r\n      body: s.body,\r\n    };\r\n    return this.http.post<number>(storiesUrl, data).pipe(map((id) => {\r\n      s.id = id;\r\n      s.author = {\r\n        id: this.userService.currentUser.id,\r\n        username: this.userService.currentUser.username,\r\n      };\r\n      this.stories.push(s);\r\n    }));\r\n  }\r\n\r\n  getComments(s: Story) {\r\n    let url = `${storiesUrl}/${s.id}/comments`;\r\n    this.http.get<Comment[]>(url).subscribe((s) => (this.comments = s));\r\n  }\r\n\r\n  createComment(c: any) {\r\n    let data = {\r\n      on_story: c.on_story,\r\n      body: c.body,\r\n    };\r\n    this.http.post<number>(commentsUrl, data).subscribe((id) => {\r\n      c.id = id;\r\n      (c.body = c.body),\r\n        (c.author = {\r\n          id: this.userService.currentUser.id,\r\n          username: this.userService.currentUser.username,\r\n        });\r\n      this.comments.push(c);\r\n      this.story.comments_count++;\r\n      this.showStandardToast('Comment posted');\r\n    });\r\n  }\r\n\r\n  likeStory(s: Story) {\r\n    let data = {\r\n      id: s.id,\r\n    };\r\n    this.http.post<any>(`${likesUrl}/stories/${s.id}`, data).subscribe(\r\n      (data) => {\r\n        if (data?.liked) {\r\n          this.story.likes_count++;\r\n          this.showStandardToast('Story liked');\r\n        }\r\n      },\r\n      (err) => console.error(err)\r\n    );\r\n  }\r\n\r\n  deleteStory(id: number) {\r\n    this.http.delete(`${storiesUrl}/${id}`).subscribe(() => this.getStories());\r\n  }\r\n\r\n  getProfile(param: any) {\r\n    this.http.get<User>(`${profilesUrl}/${param}`).subscribe((p) => {\r\n      this.profile = p;\r\n    });\r\n  }\r\n\r\n  getCompetitions() {\r\n    let url = `${competitionsUrl}`;\r\n    this.http.get<Competition[]>(url).subscribe((c) => (this.competitions = c));\r\n  }\r\n\r\n  getCompetition(param: any) {\r\n    this.http.get<Competition>(`${competitionsUrl}/${param}`).subscribe((c) => {\r\n      this.competition = c;\r\n    });\r\n  }\r\n\r\n  enterCompetition(c: Competition): Observable<any> {\r\n    let data = {\r\n      id: c.id,\r\n    };\r\n    return this.http.post<any>(`${competitionsUrl}/${c.id}/enter`, data);\r\n  }\r\n\r\n  showStandardToast(message: string) {\r\n    this.toastService.show(message);\r\n  }\r\n\r\n  getProfileCompetitions(user: User) {\r\n    let url = `${profilesUrl}/${user.id}/competitions`;\r\n    this.http.get<Competition[]>(url).subscribe((c) => {\r\n      this.profileCompetitions = c;\r\n      this.profileCompetitionsIds = [];\r\n      this.profileCompetitions.forEach((c, index) => {\r\n        this.profileCompetitionsIds[index] = c.id;\r\n      });\r\n    });\r\n  }\r\n\r\n  getProfileCompetitions$(user: User): Observable<Competition[]> {\r\n    let url = `${profilesUrl}/${user.id}/competitions`;\r\n    return this.http.get<Competition[]>(url).pipe(\r\n      map((c) => {\r\n        this.profileCompetitions = c;\r\n        this.profileCompetitionsIds = [];\r\n        this.profileCompetitions.forEach((c, index) => {\r\n          this.profileCompetitionsIds[index] = c.id;\r\n        });\r\n        return c;\r\n      })\r\n    );\r\n  }\r\n\r\n  getProfileStories$(user: User): Observable<Story[]> {\r\n    let url = `${profilesUrl}/${user.id}/stories`;\r\n    return this.http.get<Story[]>(url).pipe(\r\n      map((s) => {\r\n        this.profileStories = s;\r\n        return s;\r\n      })\r\n    );\r\n  }\r\n\r\n  submitCompetionStory(c: Competition, s: Story): Observable<any> {\r\n    let data = {\r\n      competition_id: c.id,\r\n      story_id: s.id\r\n    };\r\n    return this.http.post<any>(`${competitionsUrl}/${c.id}/submit`, data);\r\n  }\r\n}\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import {\r\n  HttpErrorResponse,\r\n  HttpEvent,\r\n  HttpHandler,\r\n  HttpInterceptor,\r\n  HttpRequest,\r\n} from '@angular/common/http';\r\nimport { Observable, Subject, throwError } from 'rxjs';\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ErrorHandlerService implements HttpInterceptor {\r\n  private errSubject = new Subject<string[]>();\r\n\r\n  intercept(\r\n    request: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    return next.handle(request).pipe(\r\n      catchError((resp: HttpErrorResponse) => {\r\n        if (resp.error.errors) {\r\n          this.errSubject.next([\r\n            ...(Object.values(resp.error.errors) as string[]),\r\n          ]);\r\n        } else if (resp.status == 500) {\r\n          this.errSubject.next(['An error occurred']);\r\n        } else if (resp.status == 401) {\r\n          this.errSubject.next(['Unauthorized action']);\r\n        } else {\r\n          this.errSubject.next(['An HTTP error occurred']);\r\n        }\r\n        return throwError(resp);\r\n      })\r\n    );\r\n  }\r\n\r\n  get errors(): Observable<string[]> {\r\n    return this.errSubject;\r\n  }\r\n}\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}